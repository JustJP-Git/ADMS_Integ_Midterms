#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ADMS_Integ_Midterms
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Northville Library")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUsers_Table(Users_Table instance);
    partial void UpdateUsers_Table(Users_Table instance);
    partial void DeleteUsers_Table(Users_Table instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertLibraryBook(LibraryBook instance);
    partial void UpdateLibraryBook(LibraryBook instance);
    partial void DeleteLibraryBook(LibraryBook instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertBorrowTransaction(BorrowTransaction instance);
    partial void UpdateBorrowTransaction(BorrowTransaction instance);
    partial void DeleteBorrowTransaction(BorrowTransaction instance);
    partial void InsertLibraryVisit(LibraryVisit instance);
    partial void UpdateLibraryVisit(LibraryVisit instance);
    partial void DeleteLibraryVisit(LibraryVisit instance);
    partial void InsertBookReturnStatus(BookReturnStatus instance);
    partial void UpdateBookReturnStatus(BookReturnStatus instance);
    partial void DeleteBookReturnStatus(BookReturnStatus instance);
    partial void InsertCollectedFine(CollectedFine instance);
    partial void UpdateCollectedFine(CollectedFine instance);
    partial void DeleteCollectedFine(CollectedFine instance);
    partial void InsertBookGenre(BookGenre instance);
    partial void UpdateBookGenre(BookGenre instance);
    partial void DeleteBookGenre(BookGenre instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ADMS_Integ_Midterms.Properties.Settings.Default.Northville_LibraryConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Users_Table> Users_Tables
		{
			get
			{
				return this.GetTable<Users_Table>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<LibraryBook> LibraryBooks
		{
			get
			{
				return this.GetTable<LibraryBook>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<BorrowTransaction> BorrowTransactions
		{
			get
			{
				return this.GetTable<BorrowTransaction>();
			}
		}
		
		public System.Data.Linq.Table<LibraryVisit> LibraryVisits
		{
			get
			{
				return this.GetTable<LibraryVisit>();
			}
		}
		
		public System.Data.Linq.Table<BookReturnStatus> BookReturnStatus
		{
			get
			{
				return this.GetTable<BookReturnStatus>();
			}
		}
		
		public System.Data.Linq.Table<CollectedFine> CollectedFines
		{
			get
			{
				return this.GetTable<CollectedFine>();
			}
		}
		
		public System.Data.Linq.Table<BookGenre> BookGenres
		{
			get
			{
				return this.GetTable<BookGenre>();
			}
		}
		
		public System.Data.Linq.Table<StudentInfo> StudentInfos
		{
			get
			{
				return this.GetTable<StudentInfo>();
			}
		}
		
		public System.Data.Linq.Table<BorrowTransactionView> BorrowTransactionViews
		{
			get
			{
				return this.GetTable<BorrowTransactionView>();
			}
		}
		
		public System.Data.Linq.Table<BooksAvailabilityView> BooksAvailabilityViews
		{
			get
			{
				return this.GetTable<BooksAvailabilityView>();
			}
		}
		
		public System.Data.Linq.Table<OutstandingFine> OutstandingFines
		{
			get
			{
				return this.GetTable<OutstandingFine>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users_Table")]
	public partial class Users_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _User_ID;
		
		private string _Username;
		
		private string _User_Pass;
		
		private string _Access_Level;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(string value);
    partial void OnUser_IDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnUser_PassChanging(string value);
    partial void OnUser_PassChanged();
    partial void OnAccess_LevelChanging(string value);
    partial void OnAccess_LevelChanged();
    #endregion
		
		public Users_Table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Pass", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Pass
		{
			get
			{
				return this._User_Pass;
			}
			set
			{
				if ((this._User_Pass != value))
				{
					this.OnUser_PassChanging(value);
					this.SendPropertyChanging();
					this._User_Pass = value;
					this.SendPropertyChanged("User_Pass");
					this.OnUser_PassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Access_Level", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Access_Level
		{
			get
			{
				return this._Access_Level;
			}
			set
			{
				if ((this._Access_Level != value))
				{
					this.OnAccess_LevelChanging(value);
					this.SendPropertyChanging();
					this._Access_Level = value;
					this.SendPropertyChanged("Access_Level");
					this.OnAccess_LevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Student_ID;
		
		private string _Student_Name;
		
		private string _Student_Email;
		
		private string _Student_ContactNum;
		
		private string _Student_Address;
		
		private int _Course_ID;
		
		private EntitySet<BorrowTransaction> _BorrowTransactions;
		
		private EntitySet<LibraryVisit> _LibraryVisits;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IDChanging(string value);
    partial void OnStudent_IDChanged();
    partial void OnStudent_NameChanging(string value);
    partial void OnStudent_NameChanged();
    partial void OnStudent_EmailChanging(string value);
    partial void OnStudent_EmailChanged();
    partial void OnStudent_ContactNumChanging(string value);
    partial void OnStudent_ContactNumChanged();
    partial void OnStudent_AddressChanging(string value);
    partial void OnStudent_AddressChanged();
    partial void OnCourse_IDChanging(int value);
    partial void OnCourse_IDChanged();
    #endregion
		
		public Student()
		{
			this._BorrowTransactions = new EntitySet<BorrowTransaction>(new Action<BorrowTransaction>(this.attach_BorrowTransactions), new Action<BorrowTransaction>(this.detach_BorrowTransactions));
			this._LibraryVisits = new EntitySet<LibraryVisit>(new Action<LibraryVisit>(this.attach_LibraryVisits), new Action<LibraryVisit>(this.detach_LibraryVisits));
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Student_Name
		{
			get
			{
				return this._Student_Name;
			}
			set
			{
				if ((this._Student_Name != value))
				{
					this.OnStudent_NameChanging(value);
					this.SendPropertyChanging();
					this._Student_Name = value;
					this.SendPropertyChanged("Student_Name");
					this.OnStudent_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Email", DbType="VarChar(50)")]
		public string Student_Email
		{
			get
			{
				return this._Student_Email;
			}
			set
			{
				if ((this._Student_Email != value))
				{
					this.OnStudent_EmailChanging(value);
					this.SendPropertyChanging();
					this._Student_Email = value;
					this.SendPropertyChanged("Student_Email");
					this.OnStudent_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ContactNum", DbType="Char(11)")]
		public string Student_ContactNum
		{
			get
			{
				return this._Student_ContactNum;
			}
			set
			{
				if ((this._Student_ContactNum != value))
				{
					this.OnStudent_ContactNumChanging(value);
					this.SendPropertyChanging();
					this._Student_ContactNum = value;
					this.SendPropertyChanged("Student_ContactNum");
					this.OnStudent_ContactNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Address", DbType="VarChar(50)")]
		public string Student_Address
		{
			get
			{
				return this._Student_Address;
			}
			set
			{
				if ((this._Student_Address != value))
				{
					this.OnStudent_AddressChanging(value);
					this.SendPropertyChanging();
					this._Student_Address = value;
					this.SendPropertyChanged("Student_Address");
					this.OnStudent_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="Int NOT NULL")]
		public int Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._Course_ID = value;
					this.SendPropertyChanged("Course_ID");
					this.OnCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_BorrowTransaction", Storage="_BorrowTransactions", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<BorrowTransaction> BorrowTransactions
		{
			get
			{
				return this._BorrowTransactions;
			}
			set
			{
				this._BorrowTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_LibraryVisit", Storage="_LibraryVisits", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<LibraryVisit> LibraryVisits
		{
			get
			{
				return this._LibraryVisits;
			}
			set
			{
				this._LibraryVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Student", Storage="_Course", ThisKey="Course_ID", OtherKey="Course_ID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Course_ID = value.Course_ID;
					}
					else
					{
						this._Course_ID = default(int);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BorrowTransactions(BorrowTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_BorrowTransactions(BorrowTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_LibraryVisits(LibraryVisit entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_LibraryVisits(LibraryVisit entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LibraryBooks")]
	public partial class LibraryBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Book_ID;
		
		private string _Book_Title;
		
		private string _Book_Author;
		
		private string _Book_ISBN;
		
		private int _Book_PublicationYear;
		
		private int _BookGenre_ID;
		
		private System.Nullable<int> _Available_Quantity;
		
		private EntitySet<BorrowTransaction> _BorrowTransactions;
		
		private EntityRef<BookGenre> _BookGenre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBook_IDChanging(int value);
    partial void OnBook_IDChanged();
    partial void OnBook_TitleChanging(string value);
    partial void OnBook_TitleChanged();
    partial void OnBook_AuthorChanging(string value);
    partial void OnBook_AuthorChanged();
    partial void OnBook_ISBNChanging(string value);
    partial void OnBook_ISBNChanged();
    partial void OnBook_PublicationYearChanging(int value);
    partial void OnBook_PublicationYearChanged();
    partial void OnBookGenre_IDChanging(int value);
    partial void OnBookGenre_IDChanged();
    partial void OnAvailable_QuantityChanging(System.Nullable<int> value);
    partial void OnAvailable_QuantityChanged();
    #endregion
		
		public LibraryBook()
		{
			this._BorrowTransactions = new EntitySet<BorrowTransaction>(new Action<BorrowTransaction>(this.attach_BorrowTransactions), new Action<BorrowTransaction>(this.detach_BorrowTransactions));
			this._BookGenre = default(EntityRef<BookGenre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Book_ID
		{
			get
			{
				return this._Book_ID;
			}
			set
			{
				if ((this._Book_ID != value))
				{
					this.OnBook_IDChanging(value);
					this.SendPropertyChanging();
					this._Book_ID = value;
					this.SendPropertyChanged("Book_ID");
					this.OnBook_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Book_Title
		{
			get
			{
				return this._Book_Title;
			}
			set
			{
				if ((this._Book_Title != value))
				{
					this.OnBook_TitleChanging(value);
					this.SendPropertyChanging();
					this._Book_Title = value;
					this.SendPropertyChanged("Book_Title");
					this.OnBook_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Author", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Book_Author
		{
			get
			{
				return this._Book_Author;
			}
			set
			{
				if ((this._Book_Author != value))
				{
					this.OnBook_AuthorChanging(value);
					this.SendPropertyChanging();
					this._Book_Author = value;
					this.SendPropertyChanged("Book_Author");
					this.OnBook_AuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ISBN", DbType="Char(13) NOT NULL", CanBeNull=false)]
		public string Book_ISBN
		{
			get
			{
				return this._Book_ISBN;
			}
			set
			{
				if ((this._Book_ISBN != value))
				{
					this.OnBook_ISBNChanging(value);
					this.SendPropertyChanging();
					this._Book_ISBN = value;
					this.SendPropertyChanged("Book_ISBN");
					this.OnBook_ISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_PublicationYear", DbType="Int NOT NULL")]
		public int Book_PublicationYear
		{
			get
			{
				return this._Book_PublicationYear;
			}
			set
			{
				if ((this._Book_PublicationYear != value))
				{
					this.OnBook_PublicationYearChanging(value);
					this.SendPropertyChanging();
					this._Book_PublicationYear = value;
					this.SendPropertyChanged("Book_PublicationYear");
					this.OnBook_PublicationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookGenre_ID", DbType="Int NOT NULL")]
		public int BookGenre_ID
		{
			get
			{
				return this._BookGenre_ID;
			}
			set
			{
				if ((this._BookGenre_ID != value))
				{
					if (this._BookGenre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookGenre_IDChanging(value);
					this.SendPropertyChanging();
					this._BookGenre_ID = value;
					this.SendPropertyChanged("BookGenre_ID");
					this.OnBookGenre_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available_Quantity", DbType="Int")]
		public System.Nullable<int> Available_Quantity
		{
			get
			{
				return this._Available_Quantity;
			}
			set
			{
				if ((this._Available_Quantity != value))
				{
					this.OnAvailable_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Available_Quantity = value;
					this.SendPropertyChanged("Available_Quantity");
					this.OnAvailable_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LibraryBook_BorrowTransaction", Storage="_BorrowTransactions", ThisKey="Book_ID", OtherKey="Book_ID")]
		public EntitySet<BorrowTransaction> BorrowTransactions
		{
			get
			{
				return this._BorrowTransactions;
			}
			set
			{
				this._BorrowTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookGenre_LibraryBook", Storage="_BookGenre", ThisKey="BookGenre_ID", OtherKey="BookGenre_ID", IsForeignKey=true)]
		public BookGenre BookGenre
		{
			get
			{
				return this._BookGenre.Entity;
			}
			set
			{
				BookGenre previousValue = this._BookGenre.Entity;
				if (((previousValue != value) 
							|| (this._BookGenre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookGenre.Entity = null;
						previousValue.LibraryBooks.Remove(this);
					}
					this._BookGenre.Entity = value;
					if ((value != null))
					{
						value.LibraryBooks.Add(this);
						this._BookGenre_ID = value.BookGenre_ID;
					}
					else
					{
						this._BookGenre_ID = default(int);
					}
					this.SendPropertyChanged("BookGenre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BorrowTransactions(BorrowTransaction entity)
		{
			this.SendPropertyChanging();
			entity.LibraryBook = this;
		}
		
		private void detach_BorrowTransactions(BorrowTransaction entity)
		{
			this.SendPropertyChanging();
			entity.LibraryBook = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Courses")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Course_ID;
		
		private string _Course_Name;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourse_IDChanging(int value);
    partial void OnCourse_IDChanged();
    partial void OnCourse_NameChanging(string value);
    partial void OnCourse_NameChanged();
    #endregion
		
		public Course()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					this.OnCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._Course_ID = value;
					this.SendPropertyChanged("Course_ID");
					this.OnCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_Name", DbType="VarChar(50)")]
		public string Course_Name
		{
			get
			{
				return this._Course_Name;
			}
			set
			{
				if ((this._Course_Name != value))
				{
					this.OnCourse_NameChanging(value);
					this.SendPropertyChanging();
					this._Course_Name = value;
					this.SendPropertyChanged("Course_Name");
					this.OnCourse_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Student", Storage="_Students", ThisKey="Course_ID", OtherKey="Course_ID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BorrowTransactions")]
	public partial class BorrowTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Borrow_ID;
		
		private string _Student_ID;
		
		private int _Book_ID;
		
		private System.DateTime _Borrow_Date;
		
		private System.DateTime _Due_Date;
		
		private int _ReturnStatus_ID;
		
		private EntitySet<CollectedFine> _CollectedFines;
		
		private EntityRef<LibraryBook> _LibraryBook;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<BookReturnStatus> _BookReturnStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBorrow_IDChanging(int value);
    partial void OnBorrow_IDChanged();
    partial void OnStudent_IDChanging(string value);
    partial void OnStudent_IDChanged();
    partial void OnBook_IDChanging(int value);
    partial void OnBook_IDChanged();
    partial void OnBorrow_DateChanging(System.DateTime value);
    partial void OnBorrow_DateChanged();
    partial void OnDue_DateChanging(System.DateTime value);
    partial void OnDue_DateChanged();
    partial void OnReturnStatus_IDChanging(int value);
    partial void OnReturnStatus_IDChanged();
    #endregion
		
		public BorrowTransaction()
		{
			this._CollectedFines = new EntitySet<CollectedFine>(new Action<CollectedFine>(this.attach_CollectedFines), new Action<CollectedFine>(this.detach_CollectedFines));
			this._LibraryBook = default(EntityRef<LibraryBook>);
			this._Student = default(EntityRef<Student>);
			this._BookReturnStatus = default(EntityRef<BookReturnStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrow_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Borrow_ID
		{
			get
			{
				return this._Borrow_ID;
			}
			set
			{
				if ((this._Borrow_ID != value))
				{
					this.OnBorrow_IDChanging(value);
					this.SendPropertyChanging();
					this._Borrow_ID = value;
					this.SendPropertyChanged("Borrow_ID");
					this.OnBorrow_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ID", DbType="Int NOT NULL")]
		public int Book_ID
		{
			get
			{
				return this._Book_ID;
			}
			set
			{
				if ((this._Book_ID != value))
				{
					if (this._LibraryBook.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBook_IDChanging(value);
					this.SendPropertyChanging();
					this._Book_ID = value;
					this.SendPropertyChanged("Book_ID");
					this.OnBook_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrow_Date", DbType="Date NOT NULL")]
		public System.DateTime Borrow_Date
		{
			get
			{
				return this._Borrow_Date;
			}
			set
			{
				if ((this._Borrow_Date != value))
				{
					this.OnBorrow_DateChanging(value);
					this.SendPropertyChanging();
					this._Borrow_Date = value;
					this.SendPropertyChanged("Borrow_Date");
					this.OnBorrow_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due_Date", DbType="Date NOT NULL")]
		public System.DateTime Due_Date
		{
			get
			{
				return this._Due_Date;
			}
			set
			{
				if ((this._Due_Date != value))
				{
					this.OnDue_DateChanging(value);
					this.SendPropertyChanging();
					this._Due_Date = value;
					this.SendPropertyChanged("Due_Date");
					this.OnDue_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnStatus_ID", DbType="Int NOT NULL")]
		public int ReturnStatus_ID
		{
			get
			{
				return this._ReturnStatus_ID;
			}
			set
			{
				if ((this._ReturnStatus_ID != value))
				{
					if (this._BookReturnStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReturnStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._ReturnStatus_ID = value;
					this.SendPropertyChanged("ReturnStatus_ID");
					this.OnReturnStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BorrowTransaction_CollectedFine", Storage="_CollectedFines", ThisKey="Borrow_ID", OtherKey="Borrow_ID")]
		public EntitySet<CollectedFine> CollectedFines
		{
			get
			{
				return this._CollectedFines;
			}
			set
			{
				this._CollectedFines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LibraryBook_BorrowTransaction", Storage="_LibraryBook", ThisKey="Book_ID", OtherKey="Book_ID", IsForeignKey=true)]
		public LibraryBook LibraryBook
		{
			get
			{
				return this._LibraryBook.Entity;
			}
			set
			{
				LibraryBook previousValue = this._LibraryBook.Entity;
				if (((previousValue != value) 
							|| (this._LibraryBook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LibraryBook.Entity = null;
						previousValue.BorrowTransactions.Remove(this);
					}
					this._LibraryBook.Entity = value;
					if ((value != null))
					{
						value.BorrowTransactions.Add(this);
						this._Book_ID = value.Book_ID;
					}
					else
					{
						this._Book_ID = default(int);
					}
					this.SendPropertyChanged("LibraryBook");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_BorrowTransaction", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.BorrowTransactions.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.BorrowTransactions.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookReturnStatus_BorrowTransaction", Storage="_BookReturnStatus", ThisKey="ReturnStatus_ID", OtherKey="ReturnStatus_ID", IsForeignKey=true)]
		public BookReturnStatus BookReturnStatus
		{
			get
			{
				return this._BookReturnStatus.Entity;
			}
			set
			{
				BookReturnStatus previousValue = this._BookReturnStatus.Entity;
				if (((previousValue != value) 
							|| (this._BookReturnStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookReturnStatus.Entity = null;
						previousValue.BorrowTransactions.Remove(this);
					}
					this._BookReturnStatus.Entity = value;
					if ((value != null))
					{
						value.BorrowTransactions.Add(this);
						this._ReturnStatus_ID = value.ReturnStatus_ID;
					}
					else
					{
						this._ReturnStatus_ID = default(int);
					}
					this.SendPropertyChanged("BookReturnStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollectedFines(CollectedFine entity)
		{
			this.SendPropertyChanging();
			entity.BorrowTransaction = this;
		}
		
		private void detach_CollectedFines(CollectedFine entity)
		{
			this.SendPropertyChanging();
			entity.BorrowTransaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LibraryVisits")]
	public partial class LibraryVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Visit_ID;
		
		private string _Student_ID;
		
		private System.DateTime _Visit_Date;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisit_IDChanging(int value);
    partial void OnVisit_IDChanged();
    partial void OnStudent_IDChanging(string value);
    partial void OnStudent_IDChanged();
    partial void OnVisit_DateChanging(System.DateTime value);
    partial void OnVisit_DateChanged();
    #endregion
		
		public LibraryVisit()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visit_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Visit_ID
		{
			get
			{
				return this._Visit_ID;
			}
			set
			{
				if ((this._Visit_ID != value))
				{
					this.OnVisit_IDChanging(value);
					this.SendPropertyChanging();
					this._Visit_ID = value;
					this.SendPropertyChanged("Visit_ID");
					this.OnVisit_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visit_Date", DbType="Date NOT NULL")]
		public System.DateTime Visit_Date
		{
			get
			{
				return this._Visit_Date;
			}
			set
			{
				if ((this._Visit_Date != value))
				{
					this.OnVisit_DateChanging(value);
					this.SendPropertyChanging();
					this._Visit_Date = value;
					this.SendPropertyChanged("Visit_Date");
					this.OnVisit_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_LibraryVisit", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.LibraryVisits.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.LibraryVisits.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookReturnStatus")]
	public partial class BookReturnStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReturnStatus_ID;
		
		private string _ReturnStatus_Desc;
		
		private EntitySet<BorrowTransaction> _BorrowTransactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReturnStatus_IDChanging(int value);
    partial void OnReturnStatus_IDChanged();
    partial void OnReturnStatus_DescChanging(string value);
    partial void OnReturnStatus_DescChanged();
    #endregion
		
		public BookReturnStatus()
		{
			this._BorrowTransactions = new EntitySet<BorrowTransaction>(new Action<BorrowTransaction>(this.attach_BorrowTransactions), new Action<BorrowTransaction>(this.detach_BorrowTransactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnStatus_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReturnStatus_ID
		{
			get
			{
				return this._ReturnStatus_ID;
			}
			set
			{
				if ((this._ReturnStatus_ID != value))
				{
					this.OnReturnStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._ReturnStatus_ID = value;
					this.SendPropertyChanged("ReturnStatus_ID");
					this.OnReturnStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnStatus_Desc", DbType="VarChar(50)")]
		public string ReturnStatus_Desc
		{
			get
			{
				return this._ReturnStatus_Desc;
			}
			set
			{
				if ((this._ReturnStatus_Desc != value))
				{
					this.OnReturnStatus_DescChanging(value);
					this.SendPropertyChanging();
					this._ReturnStatus_Desc = value;
					this.SendPropertyChanged("ReturnStatus_Desc");
					this.OnReturnStatus_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookReturnStatus_BorrowTransaction", Storage="_BorrowTransactions", ThisKey="ReturnStatus_ID", OtherKey="ReturnStatus_ID")]
		public EntitySet<BorrowTransaction> BorrowTransactions
		{
			get
			{
				return this._BorrowTransactions;
			}
			set
			{
				this._BorrowTransactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BorrowTransactions(BorrowTransaction entity)
		{
			this.SendPropertyChanging();
			entity.BookReturnStatus = this;
		}
		
		private void detach_BorrowTransactions(BorrowTransaction entity)
		{
			this.SendPropertyChanging();
			entity.BookReturnStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollectedFines")]
	public partial class CollectedFine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CollectedFines_ID;
		
		private int _Borrow_ID;
		
		private System.Nullable<int> _Days_Late;
		
		private System.Nullable<int> _Accrued_Fines;
		
		private EntityRef<BorrowTransaction> _BorrowTransaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollectedFines_IDChanging(int value);
    partial void OnCollectedFines_IDChanged();
    partial void OnBorrow_IDChanging(int value);
    partial void OnBorrow_IDChanged();
    partial void OnDays_LateChanging(System.Nullable<int> value);
    partial void OnDays_LateChanged();
    partial void OnAccrued_FinesChanging(System.Nullable<int> value);
    partial void OnAccrued_FinesChanged();
    #endregion
		
		public CollectedFine()
		{
			this._BorrowTransaction = default(EntityRef<BorrowTransaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectedFines_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CollectedFines_ID
		{
			get
			{
				return this._CollectedFines_ID;
			}
			set
			{
				if ((this._CollectedFines_ID != value))
				{
					this.OnCollectedFines_IDChanging(value);
					this.SendPropertyChanging();
					this._CollectedFines_ID = value;
					this.SendPropertyChanged("CollectedFines_ID");
					this.OnCollectedFines_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrow_ID", DbType="Int NOT NULL")]
		public int Borrow_ID
		{
			get
			{
				return this._Borrow_ID;
			}
			set
			{
				if ((this._Borrow_ID != value))
				{
					if (this._BorrowTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBorrow_IDChanging(value);
					this.SendPropertyChanging();
					this._Borrow_ID = value;
					this.SendPropertyChanged("Borrow_ID");
					this.OnBorrow_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days_Late", DbType="Int")]
		public System.Nullable<int> Days_Late
		{
			get
			{
				return this._Days_Late;
			}
			set
			{
				if ((this._Days_Late != value))
				{
					this.OnDays_LateChanging(value);
					this.SendPropertyChanging();
					this._Days_Late = value;
					this.SendPropertyChanged("Days_Late");
					this.OnDays_LateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accrued_Fines", DbType="Int")]
		public System.Nullable<int> Accrued_Fines
		{
			get
			{
				return this._Accrued_Fines;
			}
			set
			{
				if ((this._Accrued_Fines != value))
				{
					this.OnAccrued_FinesChanging(value);
					this.SendPropertyChanging();
					this._Accrued_Fines = value;
					this.SendPropertyChanged("Accrued_Fines");
					this.OnAccrued_FinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BorrowTransaction_CollectedFine", Storage="_BorrowTransaction", ThisKey="Borrow_ID", OtherKey="Borrow_ID", IsForeignKey=true)]
		public BorrowTransaction BorrowTransaction
		{
			get
			{
				return this._BorrowTransaction.Entity;
			}
			set
			{
				BorrowTransaction previousValue = this._BorrowTransaction.Entity;
				if (((previousValue != value) 
							|| (this._BorrowTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BorrowTransaction.Entity = null;
						previousValue.CollectedFines.Remove(this);
					}
					this._BorrowTransaction.Entity = value;
					if ((value != null))
					{
						value.CollectedFines.Add(this);
						this._Borrow_ID = value.Borrow_ID;
					}
					else
					{
						this._Borrow_ID = default(int);
					}
					this.SendPropertyChanged("BorrowTransaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookGenre")]
	public partial class BookGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookGenre_ID;
		
		private string _BookGenre_Desc;
		
		private EntitySet<LibraryBook> _LibraryBooks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookGenre_IDChanging(int value);
    partial void OnBookGenre_IDChanged();
    partial void OnBookGenre_DescChanging(string value);
    partial void OnBookGenre_DescChanged();
    #endregion
		
		public BookGenre()
		{
			this._LibraryBooks = new EntitySet<LibraryBook>(new Action<LibraryBook>(this.attach_LibraryBooks), new Action<LibraryBook>(this.detach_LibraryBooks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookGenre_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BookGenre_ID
		{
			get
			{
				return this._BookGenre_ID;
			}
			set
			{
				if ((this._BookGenre_ID != value))
				{
					this.OnBookGenre_IDChanging(value);
					this.SendPropertyChanging();
					this._BookGenre_ID = value;
					this.SendPropertyChanged("BookGenre_ID");
					this.OnBookGenre_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookGenre_Desc", DbType="VarChar(50)")]
		public string BookGenre_Desc
		{
			get
			{
				return this._BookGenre_Desc;
			}
			set
			{
				if ((this._BookGenre_Desc != value))
				{
					this.OnBookGenre_DescChanging(value);
					this.SendPropertyChanging();
					this._BookGenre_Desc = value;
					this.SendPropertyChanged("BookGenre_Desc");
					this.OnBookGenre_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookGenre_LibraryBook", Storage="_LibraryBooks", ThisKey="BookGenre_ID", OtherKey="BookGenre_ID")]
		public EntitySet<LibraryBook> LibraryBooks
		{
			get
			{
				return this._LibraryBooks;
			}
			set
			{
				this._LibraryBooks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LibraryBooks(LibraryBook entity)
		{
			this.SendPropertyChanging();
			entity.BookGenre = this;
		}
		
		private void detach_LibraryBooks(LibraryBook entity)
		{
			this.SendPropertyChanging();
			entity.BookGenre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentInfo")]
	public partial class StudentInfo
	{
		
		private string _Student_ID;
		
		private string _Student_Name;
		
		private string _Student_Email;
		
		private string _Student_ContactNum;
		
		private string _Student_Address;
		
		private string _Course_Name;
		
		public StudentInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Student_Name
		{
			get
			{
				return this._Student_Name;
			}
			set
			{
				if ((this._Student_Name != value))
				{
					this._Student_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Email", DbType="VarChar(50)")]
		public string Student_Email
		{
			get
			{
				return this._Student_Email;
			}
			set
			{
				if ((this._Student_Email != value))
				{
					this._Student_Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ContactNum", DbType="Char(11)")]
		public string Student_ContactNum
		{
			get
			{
				return this._Student_ContactNum;
			}
			set
			{
				if ((this._Student_ContactNum != value))
				{
					this._Student_ContactNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Address", DbType="VarChar(50)")]
		public string Student_Address
		{
			get
			{
				return this._Student_Address;
			}
			set
			{
				if ((this._Student_Address != value))
				{
					this._Student_Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_Name", DbType="VarChar(50)")]
		public string Course_Name
		{
			get
			{
				return this._Course_Name;
			}
			set
			{
				if ((this._Course_Name != value))
				{
					this._Course_Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BorrowTransactionView")]
	public partial class BorrowTransactionView
	{
		
		private int _Borrow_ID;
		
		private string _Student_ID;
		
		private int _Book_ID;
		
		private System.DateTime _Borrow_Date;
		
		private System.DateTime _Due_Date;
		
		private string _ReturnStatus_Desc;
		
		public BorrowTransactionView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrow_ID", DbType="Int NOT NULL")]
		public int Borrow_ID
		{
			get
			{
				return this._Borrow_ID;
			}
			set
			{
				if ((this._Borrow_ID != value))
				{
					this._Borrow_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ID", DbType="Int NOT NULL")]
		public int Book_ID
		{
			get
			{
				return this._Book_ID;
			}
			set
			{
				if ((this._Book_ID != value))
				{
					this._Book_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrow_Date", DbType="Date NOT NULL")]
		public System.DateTime Borrow_Date
		{
			get
			{
				return this._Borrow_Date;
			}
			set
			{
				if ((this._Borrow_Date != value))
				{
					this._Borrow_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due_Date", DbType="Date NOT NULL")]
		public System.DateTime Due_Date
		{
			get
			{
				return this._Due_Date;
			}
			set
			{
				if ((this._Due_Date != value))
				{
					this._Due_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnStatus_Desc", DbType="VarChar(50)")]
		public string ReturnStatus_Desc
		{
			get
			{
				return this._ReturnStatus_Desc;
			}
			set
			{
				if ((this._ReturnStatus_Desc != value))
				{
					this._ReturnStatus_Desc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BooksAvailabilityView")]
	public partial class BooksAvailabilityView
	{
		
		private string _Book_Title;
		
		private string _Book_Author;
		
		private string _Book_ISBN;
		
		private int _Book_PublicationYear;
		
		private string _BookGenre;
		
		private string _Status;
		
		public BooksAvailabilityView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Book_Title
		{
			get
			{
				return this._Book_Title;
			}
			set
			{
				if ((this._Book_Title != value))
				{
					this._Book_Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Author", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Book_Author
		{
			get
			{
				return this._Book_Author;
			}
			set
			{
				if ((this._Book_Author != value))
				{
					this._Book_Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ISBN", DbType="Char(13) NOT NULL", CanBeNull=false)]
		public string Book_ISBN
		{
			get
			{
				return this._Book_ISBN;
			}
			set
			{
				if ((this._Book_ISBN != value))
				{
					this._Book_ISBN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_PublicationYear", DbType="Int NOT NULL")]
		public int Book_PublicationYear
		{
			get
			{
				return this._Book_PublicationYear;
			}
			set
			{
				if ((this._Book_PublicationYear != value))
				{
					this._Book_PublicationYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookGenre", DbType="VarChar(50)")]
		public string BookGenre
		{
			get
			{
				return this._BookGenre;
			}
			set
			{
				if ((this._BookGenre != value))
				{
					this._BookGenre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(13)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutstandingFines")]
	public partial class OutstandingFine
	{
		
		private int _Borrow_ID;
		
		private string _Student_ID;
		
		private string _Book_Title;
		
		private System.DateTime _Borrow_Date;
		
		private System.DateTime _Due_Date;
		
		private string _ReturnStatus_Desc;
		
		private System.Nullable<int> _Due_Fines;
		
		public OutstandingFine()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrow_ID", DbType="Int NOT NULL")]
		public int Borrow_ID
		{
			get
			{
				return this._Borrow_ID;
			}
			set
			{
				if ((this._Borrow_ID != value))
				{
					this._Borrow_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Book_Title
		{
			get
			{
				return this._Book_Title;
			}
			set
			{
				if ((this._Book_Title != value))
				{
					this._Book_Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrow_Date", DbType="Date NOT NULL")]
		public System.DateTime Borrow_Date
		{
			get
			{
				return this._Borrow_Date;
			}
			set
			{
				if ((this._Borrow_Date != value))
				{
					this._Borrow_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due_Date", DbType="Date NOT NULL")]
		public System.DateTime Due_Date
		{
			get
			{
				return this._Due_Date;
			}
			set
			{
				if ((this._Due_Date != value))
				{
					this._Due_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnStatus_Desc", DbType="VarChar(50)")]
		public string ReturnStatus_Desc
		{
			get
			{
				return this._ReturnStatus_Desc;
			}
			set
			{
				if ((this._ReturnStatus_Desc != value))
				{
					this._ReturnStatus_Desc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Due Fines]", Storage="_Due_Fines", DbType="Int")]
		public System.Nullable<int> Due_Fines
		{
			get
			{
				return this._Due_Fines;
			}
			set
			{
				if ((this._Due_Fines != value))
				{
					this._Due_Fines = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
